class Solution {
public:
    //Activity Search Algorithm
//     1) Sort the activities according to their finishing time 
    // 2) Select the first activity from the sorted array and print it. 
    // 3) Do following for remaining activities in the sorted array. 
    // …….a) If the start time of this activity is greater than or equal to the finish time of previously selected activity then select this activity and print it.
    static bool comp(vector<int>&a, vector<int>&b){
        return a[1]<b[1];
    }
    int eraseOverlapIntervals(vector<vector<int>>& intervals) {
        if(intervals.size()<2){
            return 0;
        }
        sort(intervals.begin(),intervals.end(), comp);
      
        int count=0;
        vector<int> previous_activity = intervals[0];
        for(auto i=1;i<intervals.size();i++){
            if(intervals[i][0]>=previous_activity[1]){
                previous_activity = intervals[i];
            }
            else {
                count++;
            }
        }

        return count;
    }
};