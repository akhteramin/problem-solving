class Solution {
public:
    int lenLongestFibSubseq(vector<int>& arr) {
        set<int> count_arr;
        // map<pair<int,int>,int> dp;
        for(int i=0;i<arr.size();i++){
            count_arr.insert(arr[i]);
        }
        int len_count=0;
        for(int i=0;i<arr.size()-1;i++){
            for(int j=i+1;j<arr.size();j++){
                int pre=arr[i],post=arr[j];
                int temp_count=2;
                
                while(count_arr.find(pre+post)!=count_arr.end()){
                    // cout<<pre<<" "<<post<<endl;
                     
                    // dp[make_pair(pre,post)]=temp_count;
                    int temp_pre = pre;
                    pre = post;
                    post =  temp_pre+post;
                    // cout<<pre+post<<" "<<count_arr[pre+post]<<endl;

                    temp_count++;
                    len_count=max(len_count, temp_count);
                    
                }
                // cout<<endl;

            }
            
        }
        // cout<<endl;
        
        return len_count;
    }
};