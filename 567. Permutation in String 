#include <algorithm>

class Solution {
public:
    bool checkInclusion(string s1, string s2) {
        int count_char[26], window_start=0;
        queue<char> qu;
        fill_n(count_char,26,0);
        for(auto i=0;i<s1.length();i++){
            
            count_char[s1[i]-'a']++;
        }
        
        for(auto window_end=0;window_end<s2.length();window_end++){
            
            if(count_char[s2[window_end]-'a']<=0){
                int flag=0;
                while(!qu.empty()){
                    char ch = qu.front();
                    qu.pop();
                    count_char[ch-'a']++;
                    window_start++;
                    if(ch==s2[window_end]){
                        flag=1;
                        break;
                    }
                        
                }
                // if(last_index[s2[window_end]-'a']==0)
                if(!flag)
                    window_start++;
                
               
            }
            if(count_char[s2[window_end]-'a']>0){
                
                count_char[s2[window_end]-'a']--;
                qu.push(s2[window_end]);
            }
            // cout<<window_end<<" "<<window_start<<endl;
            if(window_end-window_start+1==s1.length())
                return true;
            // last_index[s2[window_end]-'a'] =  window_end;
        }
        
        return false;
    }
};